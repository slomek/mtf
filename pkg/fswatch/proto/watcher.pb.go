// Code generated by protoc-gen-go. DO NOT EDIT.
// source: watcher.proto

package watcher

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Action int32

const (
	Action_UNKNOWN Action = 0
	Action_ADDED   Action = 1
	Action_REMOVED Action = 2
	Action_EDITED  Action = 3
)

var Action_name = map[int32]string{
	0: "UNKNOWN",
	1: "ADDED",
	2: "REMOVED",
	3: "EDITED",
}

var Action_value = map[string]int32{
	"UNKNOWN": 0,
	"ADDED":   1,
	"REMOVED": 2,
	"EDITED":  3,
}

func (x Action) String() string {
	return proto.EnumName(Action_name, int32(x))
}

func (Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f367c5ca26d9ac38, []int{0}
}

type EventRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Action               Action   `protobuf:"varint,2,opt,name=action,proto3,enum=watcher.Action" json:"action,omitempty"`
	Content              []byte   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventRequest) Reset()         { *m = EventRequest{} }
func (m *EventRequest) String() string { return proto.CompactTextString(m) }
func (*EventRequest) ProtoMessage()    {}
func (*EventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f367c5ca26d9ac38, []int{0}
}

func (m *EventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventRequest.Unmarshal(m, b)
}
func (m *EventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventRequest.Marshal(b, m, deterministic)
}
func (m *EventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventRequest.Merge(m, src)
}
func (m *EventRequest) XXX_Size() int {
	return xxx_messageInfo_EventRequest.Size(m)
}
func (m *EventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventRequest proto.InternalMessageInfo

func (m *EventRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *EventRequest) GetAction() Action {
	if m != nil {
		return m.Action
	}
	return Action_UNKNOWN
}

func (m *EventRequest) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func init() {
	proto.RegisterEnum("watcher.Action", Action_name, Action_value)
	proto.RegisterType((*EventRequest)(nil), "watcher.EventRequest")
}

func init() { proto.RegisterFile("watcher.proto", fileDescriptor_f367c5ca26d9ac38) }

var fileDescriptor_f367c5ca26d9ac38 = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0xdd, 0xd6, 0x26, 0x74, 0xac, 0x1a, 0x06, 0x94, 0xa5, 0x5e, 0x82, 0x17, 0x83, 0x87,
	0x2d, 0x54, 0x10, 0x3c, 0x06, 0x76, 0x0f, 0x22, 0xa6, 0xb0, 0xa8, 0x3d, 0xa7, 0x61, 0x6c, 0x05,
	0xdd, 0x8d, 0x75, 0xaa, 0xf8, 0xef, 0xa5, 0xbb, 0x8d, 0xf4, 0x36, 0xef, 0xcd, 0x83, 0xf7, 0x3e,
	0x38, 0xfe, 0xa9, 0xb9, 0x59, 0xd1, 0x5a, 0xb5, 0x6b, 0xcf, 0x1e, 0xd3, 0x9d, 0x1c, 0x5f, 0x2c,
	0xbd, 0x5f, 0xbe, 0xd3, 0x24, 0xd8, 0x8b, 0xcd, 0xeb, 0x84, 0x3e, 0x5a, 0xfe, 0x8d, 0xa9, 0x4b,
	0x82, 0x91, 0xf9, 0x26, 0xc7, 0x96, 0x3e, 0x37, 0xf4, 0xc5, 0x88, 0x70, 0xd8, 0xd6, 0xbc, 0x92,
	0x22, 0x17, 0xc5, 0xd0, 0x86, 0x1b, 0xaf, 0x20, 0xa9, 0x1b, 0x7e, 0xf3, 0x4e, 0xf6, 0x72, 0x51,
	0x9c, 0x4c, 0x4f, 0x55, 0xd7, 0x54, 0x06, 0xdb, 0xee, 0xde, 0x28, 0x21, 0x6d, 0xbc, 0x63, 0x72,
	0x2c, 0xfb, 0xb9, 0x28, 0x46, 0xb6, 0x93, 0xd7, 0x77, 0x90, 0xc4, 0x2c, 0x1e, 0x41, 0xfa, 0x5c,
	0x3d, 0x54, 0xb3, 0x79, 0x95, 0x1d, 0xe0, 0x10, 0x06, 0xa5, 0xd6, 0x46, 0x67, 0x62, 0xeb, 0x5b,
	0xf3, 0x38, 0x7b, 0x31, 0x3a, 0xeb, 0x21, 0x40, 0x62, 0xf4, 0xfd, 0x93, 0xd1, 0x59, 0x7f, 0x5a,
	0x42, 0x3a, 0x8f, 0x75, 0x78, 0x0b, 0x83, 0x30, 0x16, 0xcf, 0xfe, 0x17, 0xec, 0x8f, 0x1f, 0x9f,
	0xab, 0x88, 0xaa, 0x3a, 0x54, 0x65, 0xb6, 0xa8, 0x8b, 0x24, 0xe8, 0x9b, 0xbf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x35, 0xe4, 0xe5, 0xfd, 0x22, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WatcherClient is the client API for Watcher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WatcherClient interface {
	Event(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type watcherClient struct {
	cc *grpc.ClientConn
}

func NewWatcherClient(cc *grpc.ClientConn) WatcherClient {
	return &watcherClient{cc}
}

func (c *watcherClient) Event(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/watcher.Watcher/Event", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WatcherServer is the server API for Watcher service.
type WatcherServer interface {
	Event(context.Context, *EventRequest) (*empty.Empty, error)
}

func RegisterWatcherServer(s *grpc.Server, srv WatcherServer) {
	s.RegisterService(&_Watcher_serviceDesc, srv)
}

func _Watcher_Event_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatcherServer).Event(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/watcher.Watcher/Event",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatcherServer).Event(ctx, req.(*EventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Watcher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "watcher.Watcher",
	HandlerType: (*WatcherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Event",
			Handler:    _Watcher_Event_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "watcher.proto",
}
